# Generated by Django 4.2 on 2025-07-20 12:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AffiliateProfile',
            fields=[
                ('id', models.CharField(editable=False, max_length=15, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rc_code', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('affiliate_joined_on', models.DateTimeField(blank=True, null=True)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
            options={
                'ordering': ['created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('prepared', 'Prepared'), ('active', 'Active'), ('past', 'Past')], max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('discounted_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('discount_description', models.CharField(blank=True, max_length=55, null=True)),
                ('live_draw_date', models.DateTimeField()),
                ('closing_date', models.DateTimeField()),
                ('extension_count', models.PositiveIntegerField(default=0)),
                ('number_of_winners', models.PositiveIntegerField(default=30)),
                ('ticket_letter_limit', models.PositiveSmallIntegerField(default=1)),
                ('ticket_number_limit', models.PositiveSmallIntegerField(default=3)),
                ('ticket_quantity', models.PositiveIntegerField(default=26000)),
                ('ticket_purchase_limit_per_user', models.PositiveIntegerField(default=7)),
                ('is_coupon_competition', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-live_draw_date'],
            },
        ),
        migrations.CreateModel(
            name='CompetitionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ECard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('video', models.FileField(blank=True, null=True, upload_to='ecards/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_used', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='InstantWinPrize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prize_title', models.CharField(max_length=255)),
                ('prize_description', models.TextField()),
                ('giveaway_count', models.PositiveIntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='instant_wins/')),
                ('won_at', models.DateTimeField(auto_now_add=True)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.competition')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.CharField(max_length=10)),
                ('status', models.CharField(choices=[('available', 'Available'), ('reserved', 'Reserved'), ('sold', 'Sold')], default='available', max_length=10)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='apis.competition')),
                ('ecard', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='apis.ecard')),
            ],
        ),
        migrations.CreateModel(
            name='Winner',
            fields=[
                ('id', models.CharField(editable=False, max_length=15, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_instant_win', models.BooleanField(default=False)),
                ('winner_picture', models.ImageField(blank=True, null=True, upload_to='winners/')),
                ('winner_video', models.FileField(blank=True, null=True, upload_to='winners/')),
                ('instant_prize', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='apis.instantwinprize')),
                ('prize', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.competition')),
                ('ticket', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='apis.ticket')),
            ],
            options={
                'ordering': ['created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.CharField(editable=False, max_length=15, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('province', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_allow_affiliate_marketing', models.BooleanField(default=False)),
                ('referrar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referees', to='apis.userprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='ticket',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apis.userprofile'),
        ),
        migrations.CreateModel(
            name='PasswordResetRequest',
            fields=[
                ('id', models.CharField(editable=False, max_length=15, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('token', models.CharField(max_length=100)),
                ('is_used', models.BooleanField(default=False)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.userprofile')),
            ],
            options={
                'ordering': ['created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OTPVerification',
            fields=[
                ('id', models.CharField(editable=False, max_length=15, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('code', models.CharField(max_length=6)),
                ('is_verified', models.BooleanField(default=False)),
                ('purpose', models.CharField(default='registration', max_length=50)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otp_codes', to='apis.userprofile')),
            ],
            options={
                'ordering': ['created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitionImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='competitions/images/')),
                ('is_main', models.BooleanField(default=False)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='apis.competition')),
            ],
        ),
        migrations.AddField(
            model_name='competition',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitions', to='apis.competitioncategory'),
        ),
        migrations.CreateModel(
            name='AffiliateWithdrawal',
            fields=[
                ('id', models.CharField(editable=False, max_length=15, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('affiliate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.affiliateprofile')),
            ],
            options={
                'ordering': ['created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AffiliateTransaction',
            fields=[
                ('id', models.CharField(editable=False, max_length=15, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('transaction_type', models.CharField(choices=[('credit', 'Credit'), ('debit', 'Debit')], max_length=10)),
                ('referrar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apis.affiliateprofile')),
            ],
            options={
                'ordering': ['created_at'],
                'abstract': False,
            },
        ),
    ]
